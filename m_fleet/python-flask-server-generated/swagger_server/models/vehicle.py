# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.vehicle_path import VehiclePath  # noqa: F401,E501
from swagger_server.models.all_of_vehicle_state import AllOfVehicleState  # noqa: F401,E501
from swagger_server import util


class Vehicle(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, type: str=None, online: bool=None, state: AllOfVehicleState=None, location_id: str=None, warehouse_id: str=None, zone_id: str=None, area_code: str=None, x: int=None, y: int=None, direction: float=None, liftup_time: int=None, speed: int=None, mileage: int=None, power: float=None, battery_temperature: float=None, task_id: str=None, exception_code: str=None, error_level: str=None, state_message: str=None, path_list: List[VehiclePath]=None):  # noqa: E501
        """Vehicle - a model defined in Swagger

        :param id: The id of this Vehicle.  # noqa: E501
        :type id: str
        :param type: The type of this Vehicle.  # noqa: E501
        :type type: str
        :param online: The online of this Vehicle.  # noqa: E501
        :type online: bool
        :param state: The state of this Vehicle.  # noqa: E501
        :type state: AllOfVehicleState
        :param location_id: The location_id of this Vehicle.  # noqa: E501
        :type location_id: str
        :param warehouse_id: The warehouse_id of this Vehicle.  # noqa: E501
        :type warehouse_id: str
        :param zone_id: The zone_id of this Vehicle.  # noqa: E501
        :type zone_id: str
        :param area_code: The area_code of this Vehicle.  # noqa: E501
        :type area_code: str
        :param x: The x of this Vehicle.  # noqa: E501
        :type x: int
        :param y: The y of this Vehicle.  # noqa: E501
        :type y: int
        :param direction: The direction of this Vehicle.  # noqa: E501
        :type direction: float
        :param liftup_time: The liftup_time of this Vehicle.  # noqa: E501
        :type liftup_time: int
        :param speed: The speed of this Vehicle.  # noqa: E501
        :type speed: int
        :param mileage: The mileage of this Vehicle.  # noqa: E501
        :type mileage: int
        :param power: The power of this Vehicle.  # noqa: E501
        :type power: float
        :param battery_temperature: The battery_temperature of this Vehicle.  # noqa: E501
        :type battery_temperature: float
        :param task_id: The task_id of this Vehicle.  # noqa: E501
        :type task_id: str
        :param exception_code: The exception_code of this Vehicle.  # noqa: E501
        :type exception_code: str
        :param error_level: The error_level of this Vehicle.  # noqa: E501
        :type error_level: str
        :param state_message: The state_message of this Vehicle.  # noqa: E501
        :type state_message: str
        :param path_list: The path_list of this Vehicle.  # noqa: E501
        :type path_list: List[VehiclePath]
        """
        self.swagger_types = {
            'id': str,
            'type': str,
            'online': bool,
            'state': AllOfVehicleState,
            'location_id': str,
            'warehouse_id': str,
            'zone_id': str,
            'area_code': str,
            'x': int,
            'y': int,
            'direction': float,
            'liftup_time': int,
            'speed': int,
            'mileage': int,
            'power': float,
            'battery_temperature': float,
            'task_id': str,
            'exception_code': str,
            'error_level': str,
            'state_message': str,
            'path_list': List[VehiclePath]
        }

        self.attribute_map = {
            'id': 'id',
            'type': 'type',
            'online': 'online',
            'state': 'state',
            'location_id': 'locationId',
            'warehouse_id': 'warehouseId',
            'zone_id': 'zoneId',
            'area_code': 'areaCode',
            'x': 'x',
            'y': 'y',
            'direction': 'direction',
            'liftup_time': 'liftupTime',
            'speed': 'speed',
            'mileage': 'mileage',
            'power': 'power',
            'battery_temperature': 'batteryTemperature',
            'task_id': 'taskId',
            'exception_code': 'exceptionCode',
            'error_level': 'errorLevel',
            'state_message': 'stateMessage',
            'path_list': 'pathList'
        }
        self._id = id
        self._type = type
        self._online = online
        self._state = state
        self._location_id = location_id
        self._warehouse_id = warehouse_id
        self._zone_id = zone_id
        self._area_code = area_code
        self._x = x
        self._y = y
        self._direction = direction
        self._liftup_time = liftup_time
        self._speed = speed
        self._mileage = mileage
        self._power = power
        self._battery_temperature = battery_temperature
        self._task_id = task_id
        self._exception_code = exception_code
        self._error_level = error_level
        self._state_message = state_message
        self._path_list = path_list

    @classmethod
    def from_dict(cls, dikt) -> 'Vehicle':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Vehicle of this Vehicle.  # noqa: E501
        :rtype: Vehicle
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Vehicle.

        The AMR subsystem identifier for the vehicle  # noqa: E501

        :return: The id of this Vehicle.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Vehicle.

        The AMR subsystem identifier for the vehicle  # noqa: E501

        :param id: The id of this Vehicle.
        :type id: str
        """

        self._id = id

    @property
    def type(self) -> str:
        """Gets the type of this Vehicle.

        The type of vehicle  # noqa: E501

        :return: The type of this Vehicle.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this Vehicle.

        The type of vehicle  # noqa: E501

        :param type: The type of this Vehicle.
        :type type: str
        """

        self._type = type

    @property
    def online(self) -> bool:
        """Gets the online of this Vehicle.

        The AMR status  # noqa: E501

        :return: The online of this Vehicle.
        :rtype: bool
        """
        return self._online

    @online.setter
    def online(self, online: bool):
        """Sets the online of this Vehicle.

        The AMR status  # noqa: E501

        :param online: The online of this Vehicle.
        :type online: bool
        """

        self._online = online

    @property
    def state(self) -> AllOfVehicleState:
        """Gets the state of this Vehicle.

        The state of the vehicle is dependent on the AMR Subsystem and type of vehicle  # noqa: E501

        :return: The state of this Vehicle.
        :rtype: AllOfVehicleState
        """
        return self._state

    @state.setter
    def state(self, state: AllOfVehicleState):
        """Sets the state of this Vehicle.

        The state of the vehicle is dependent on the AMR Subsystem and type of vehicle  # noqa: E501

        :param state: The state of this Vehicle.
        :type state: AllOfVehicleState
        """

        self._state = state

    @property
    def location_id(self) -> str:
        """Gets the location_id of this Vehicle.

        The current location of the vehicle  # noqa: E501

        :return: The location_id of this Vehicle.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id: str):
        """Sets the location_id of this Vehicle.

        The current location of the vehicle  # noqa: E501

        :param location_id: The location_id of this Vehicle.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def warehouse_id(self) -> str:
        """Gets the warehouse_id of this Vehicle.

        The warehouse id the vehicle is assigned to  # noqa: E501

        :return: The warehouse_id of this Vehicle.
        :rtype: str
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id: str):
        """Sets the warehouse_id of this Vehicle.

        The warehouse id the vehicle is assigned to  # noqa: E501

        :param warehouse_id: The warehouse_id of this Vehicle.
        :type warehouse_id: str
        """

        self._warehouse_id = warehouse_id

    @property
    def zone_id(self) -> str:
        """Gets the zone_id of this Vehicle.

        The current zone the vehicle is assigned to  # noqa: E501

        :return: The zone_id of this Vehicle.
        :rtype: str
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id: str):
        """Sets the zone_id of this Vehicle.

        The current zone the vehicle is assigned to  # noqa: E501

        :param zone_id: The zone_id of this Vehicle.
        :type zone_id: str
        """

        self._zone_id = zone_id

    @property
    def area_code(self) -> str:
        """Gets the area_code of this Vehicle.

        the area where the vehicle is assigned to  # noqa: E501

        :return: The area_code of this Vehicle.
        :rtype: str
        """
        return self._area_code

    @area_code.setter
    def area_code(self, area_code: str):
        """Sets the area_code of this Vehicle.

        the area where the vehicle is assigned to  # noqa: E501

        :param area_code: The area_code of this Vehicle.
        :type area_code: str
        """

        self._area_code = area_code

    @property
    def x(self) -> int:
        """Gets the x of this Vehicle.

        X coordinate  # noqa: E501

        :return: The x of this Vehicle.
        :rtype: int
        """
        return self._x

    @x.setter
    def x(self, x: int):
        """Sets the x of this Vehicle.

        X coordinate  # noqa: E501

        :param x: The x of this Vehicle.
        :type x: int
        """

        self._x = x

    @property
    def y(self) -> int:
        """Gets the y of this Vehicle.

        Y coordinate  # noqa: E501

        :return: The y of this Vehicle.
        :rtype: int
        """
        return self._y

    @y.setter
    def y(self, y: int):
        """Sets the y of this Vehicle.

        Y coordinate  # noqa: E501

        :param y: The y of this Vehicle.
        :type y: int
        """

        self._y = y

    @property
    def direction(self) -> float:
        """Gets the direction of this Vehicle.

        Direction of an AGV  # noqa: E501

        :return: The direction of this Vehicle.
        :rtype: float
        """
        return self._direction

    @direction.setter
    def direction(self, direction: float):
        """Sets the direction of this Vehicle.

        Direction of an AGV  # noqa: E501

        :param direction: The direction of this Vehicle.
        :type direction: float
        """

        self._direction = direction

    @property
    def liftup_time(self) -> int:
        """Gets the liftup_time of this Vehicle.

        Timestamp of when the current container was retrieved  # noqa: E501

        :return: The liftup_time of this Vehicle.
        :rtype: int
        """
        return self._liftup_time

    @liftup_time.setter
    def liftup_time(self, liftup_time: int):
        """Sets the liftup_time of this Vehicle.

        Timestamp of when the current container was retrieved  # noqa: E501

        :param liftup_time: The liftup_time of this Vehicle.
        :type liftup_time: int
        """

        self._liftup_time = liftup_time

    @property
    def speed(self) -> int:
        """Gets the speed of this Vehicle.

        Velocity  # noqa: E501

        :return: The speed of this Vehicle.
        :rtype: int
        """
        return self._speed

    @speed.setter
    def speed(self, speed: int):
        """Sets the speed of this Vehicle.

        Velocity  # noqa: E501

        :param speed: The speed of this Vehicle.
        :type speed: int
        """

        self._speed = speed

    @property
    def mileage(self) -> int:
        """Gets the mileage of this Vehicle.

        The miles traveled by the vehicle  # noqa: E501

        :return: The mileage of this Vehicle.
        :rtype: int
        """
        return self._mileage

    @mileage.setter
    def mileage(self, mileage: int):
        """Sets the mileage of this Vehicle.

        The miles traveled by the vehicle  # noqa: E501

        :param mileage: The mileage of this Vehicle.
        :type mileage: int
        """

        self._mileage = mileage

    @property
    def power(self) -> float:
        """Gets the power of this Vehicle.

        The amount of power in the vehicle battery  # noqa: E501

        :return: The power of this Vehicle.
        :rtype: float
        """
        return self._power

    @power.setter
    def power(self, power: float):
        """Sets the power of this Vehicle.

        The amount of power in the vehicle battery  # noqa: E501

        :param power: The power of this Vehicle.
        :type power: float
        """

        self._power = power

    @property
    def battery_temperature(self) -> float:
        """Gets the battery_temperature of this Vehicle.

        The Battery Temperature level  # noqa: E501

        :return: The battery_temperature of this Vehicle.
        :rtype: float
        """
        return self._battery_temperature

    @battery_temperature.setter
    def battery_temperature(self, battery_temperature: float):
        """Sets the battery_temperature of this Vehicle.

        The Battery Temperature level  # noqa: E501

        :param battery_temperature: The battery_temperature of this Vehicle.
        :type battery_temperature: float
        """

        self._battery_temperature = battery_temperature

    @property
    def task_id(self) -> str:
        """Gets the task_id of this Vehicle.

        The task Id if the vehicle is assigned to a task  # noqa: E501

        :return: The task_id of this Vehicle.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id: str):
        """Sets the task_id of this Vehicle.

        The task Id if the vehicle is assigned to a task  # noqa: E501

        :param task_id: The task_id of this Vehicle.
        :type task_id: str
        """

        self._task_id = task_id

    @property
    def exception_code(self) -> str:
        """Gets the exception_code of this Vehicle.

        The exception on the vehicle if any failures  # noqa: E501

        :return: The exception_code of this Vehicle.
        :rtype: str
        """
        return self._exception_code

    @exception_code.setter
    def exception_code(self, exception_code: str):
        """Sets the exception_code of this Vehicle.

        The exception on the vehicle if any failures  # noqa: E501

        :param exception_code: The exception_code of this Vehicle.
        :type exception_code: str
        """

        self._exception_code = exception_code

    @property
    def error_level(self) -> str:
        """Gets the error_level of this Vehicle.

        The errorLevel on the vehicle if any failures  # noqa: E501

        :return: The error_level of this Vehicle.
        :rtype: str
        """
        return self._error_level

    @error_level.setter
    def error_level(self, error_level: str):
        """Sets the error_level of this Vehicle.

        The errorLevel on the vehicle if any failures  # noqa: E501

        :param error_level: The error_level of this Vehicle.
        :type error_level: str
        """

        self._error_level = error_level

    @property
    def state_message(self) -> str:
        """Gets the state_message of this Vehicle.

        The stateMessage on the vehicle if any failures  # noqa: E501

        :return: The state_message of this Vehicle.
        :rtype: str
        """
        return self._state_message

    @state_message.setter
    def state_message(self, state_message: str):
        """Sets the state_message of this Vehicle.

        The stateMessage on the vehicle if any failures  # noqa: E501

        :param state_message: The state_message of this Vehicle.
        :type state_message: str
        """

        self._state_message = state_message

    @property
    def path_list(self) -> List[VehiclePath]:
        """Gets the path_list of this Vehicle.


        :return: The path_list of this Vehicle.
        :rtype: List[VehiclePath]
        """
        return self._path_list

    @path_list.setter
    def path_list(self, path_list: List[VehiclePath]):
        """Sets the path_list of this Vehicle.


        :param path_list: The path_list of this Vehicle.
        :type path_list: List[VehiclePath]
        """

        self._path_list = path_list
