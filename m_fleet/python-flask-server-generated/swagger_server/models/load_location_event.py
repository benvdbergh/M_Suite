# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.all_of_load_location_event_event_type import AllOfLoadLocationEventEventType  # noqa: F401,E501
from swagger_server.models.all_of_load_location_event_load import AllOfLoadLocationEventLoad  # noqa: F401,E501
from swagger_server import util


class LoadLocationEvent(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, event_type: AllOfLoadLocationEventEventType=None, created: str=None, load: AllOfLoadLocationEventLoad=None):  # noqa: E501
        """LoadLocationEvent - a model defined in Swagger

        :param event_type: The event_type of this LoadLocationEvent.  # noqa: E501
        :type event_type: AllOfLoadLocationEventEventType
        :param created: The created of this LoadLocationEvent.  # noqa: E501
        :type created: str
        :param load: The load of this LoadLocationEvent.  # noqa: E501
        :type load: AllOfLoadLocationEventLoad
        """
        self.swagger_types = {
            'event_type': AllOfLoadLocationEventEventType,
            'created': str,
            'load': AllOfLoadLocationEventLoad
        }

        self.attribute_map = {
            'event_type': 'eventType',
            'created': 'created',
            'load': 'load'
        }
        self._event_type = event_type
        self._created = created
        self._load = load

    @classmethod
    def from_dict(cls, dikt) -> 'LoadLocationEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LoadLocationEvent of this LoadLocationEvent.  # noqa: E501
        :rtype: LoadLocationEvent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_type(self) -> AllOfLoadLocationEventEventType:
        """Gets the event_type of this LoadLocationEvent.

        The type of this event  # noqa: E501

        :return: The event_type of this LoadLocationEvent.
        :rtype: AllOfLoadLocationEventEventType
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type: AllOfLoadLocationEventEventType):
        """Sets the event_type of this LoadLocationEvent.

        The type of this event  # noqa: E501

        :param event_type: The event_type of this LoadLocationEvent.
        :type event_type: AllOfLoadLocationEventEventType
        """

        self._event_type = event_type

    @property
    def created(self) -> str:
        """Gets the created of this LoadLocationEvent.

        When this event was created. If the event originated in the AMR subsystem, the event creation time published by the AMR subsystem will be set, else the event creation time in VTS will be set  # noqa: E501

        :return: The created of this LoadLocationEvent.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created: str):
        """Sets the created of this LoadLocationEvent.

        When this event was created. If the event originated in the AMR subsystem, the event creation time published by the AMR subsystem will be set, else the event creation time in VTS will be set  # noqa: E501

        :param created: The created of this LoadLocationEvent.
        :type created: str
        """

        self._created = created

    @property
    def load(self) -> AllOfLoadLocationEventLoad:
        """Gets the load of this LoadLocationEvent.

        The load object with new location to which load has relocated  # noqa: E501

        :return: The load of this LoadLocationEvent.
        :rtype: AllOfLoadLocationEventLoad
        """
        return self._load

    @load.setter
    def load(self, load: AllOfLoadLocationEventLoad):
        """Sets the load of this LoadLocationEvent.

        The load object with new location to which load has relocated  # noqa: E501

        :param load: The load of this LoadLocationEvent.
        :type load: AllOfLoadLocationEventLoad
        """

        self._load = load
