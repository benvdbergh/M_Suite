# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.all_of_error_detail_error_category import AllOfErrorDetailErrorCategory  # noqa: F401,E501
from swagger_server.models.all_of_error_detail_meta import AllOfErrorDetailMeta  # noqa: F401,E501
from swagger_server import util


class ErrorDetail(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, error_message: str=None, error_category: AllOfErrorDetailErrorCategory=None, meta: AllOfErrorDetailMeta=None, error_label: str=None, error_code: str=None):  # noqa: E501
        """ErrorDetail - a model defined in Swagger

        :param error_message: The error_message of this ErrorDetail.  # noqa: E501
        :type error_message: str
        :param error_category: The error_category of this ErrorDetail.  # noqa: E501
        :type error_category: AllOfErrorDetailErrorCategory
        :param meta: The meta of this ErrorDetail.  # noqa: E501
        :type meta: AllOfErrorDetailMeta
        :param error_label: The error_label of this ErrorDetail.  # noqa: E501
        :type error_label: str
        :param error_code: The error_code of this ErrorDetail.  # noqa: E501
        :type error_code: str
        """
        self.swagger_types = {
            'error_message': str,
            'error_category': AllOfErrorDetailErrorCategory,
            'meta': AllOfErrorDetailMeta,
            'error_label': str,
            'error_code': str
        }

        self.attribute_map = {
            'error_message': 'errorMessage',
            'error_category': 'errorCategory',
            'meta': 'meta',
            'error_label': 'errorLabel',
            'error_code': 'errorCode'
        }
        self._error_message = error_message
        self._error_category = error_category
        self._meta = meta
        self._error_label = error_label
        self._error_code = error_code

    @classmethod
    def from_dict(cls, dikt) -> 'ErrorDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ErrorDetail of this ErrorDetail.  # noqa: E501
        :rtype: ErrorDetail
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_message(self) -> str:
        """Gets the error_message of this ErrorDetail.

        The string that describes the error  # noqa: E501

        :return: The error_message of this ErrorDetail.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message: str):
        """Sets the error_message of this ErrorDetail.

        The string that describes the error  # noqa: E501

        :param error_message: The error_message of this ErrorDetail.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def error_category(self) -> AllOfErrorDetailErrorCategory:
        """Gets the error_category of this ErrorDetail.

        The string that describes the category of this error  # noqa: E501

        :return: The error_category of this ErrorDetail.
        :rtype: AllOfErrorDetailErrorCategory
        """
        return self._error_category

    @error_category.setter
    def error_category(self, error_category: AllOfErrorDetailErrorCategory):
        """Sets the error_category of this ErrorDetail.

        The string that describes the category of this error  # noqa: E501

        :param error_category: The error_category of this ErrorDetail.
        :type error_category: AllOfErrorDetailErrorCategory
        """

        self._error_category = error_category

    @property
    def meta(self) -> AllOfErrorDetailMeta:
        """Gets the meta of this ErrorDetail.

        The metadata associated with this error  # noqa: E501

        :return: The meta of this ErrorDetail.
        :rtype: AllOfErrorDetailMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta: AllOfErrorDetailMeta):
        """Sets the meta of this ErrorDetail.

        The metadata associated with this error  # noqa: E501

        :param meta: The meta of this ErrorDetail.
        :type meta: AllOfErrorDetailMeta
        """

        self._meta = meta

    @property
    def error_label(self) -> str:
        """Gets the error_label of this ErrorDetail.

        The string that describes the error. This field is deprecated. Use \"errorMessage\" instead  # noqa: E501

        :return: The error_label of this ErrorDetail.
        :rtype: str
        """
        return self._error_label

    @error_label.setter
    def error_label(self, error_label: str):
        """Sets the error_label of this ErrorDetail.

        The string that describes the error. This field is deprecated. Use \"errorMessage\" instead  # noqa: E501

        :param error_label: The error_label of this ErrorDetail.
        :type error_label: str
        """

        self._error_label = error_label

    @property
    def error_code(self) -> str:
        """Gets the error_code of this ErrorDetail.

        The code for this error. This field is deprecated. Use \"meta\" instead  # noqa: E501

        :return: The error_code of this ErrorDetail.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code: str):
        """Sets the error_code of this ErrorDetail.

        The code for this error. This field is deprecated. Use \"meta\" instead  # noqa: E501

        :param error_code: The error_code of this ErrorDetail.
        :type error_code: str
        """

        self._error_code = error_code
